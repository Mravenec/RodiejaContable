/*
 * This file is generated by jOOQ.
 */
package com.RodiejaContable.database.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VistaDashboardEjecutivo implements Serializable {

    private static final long serialVersionUID = 1L;

    private String seccion;
    private Long totalVehiculos;
    private Long vehiculosDisponibles;
    private Long vehiculosVendidos;
    private Long totalRepuestos;
    private Long repuestosStock;
    private BigDecimal inversionTotal;
    private BigDecimal ingresosTotales;
    private BigDecimal egresosTotales;
    private BigDecimal balanceNetoTotal;
    private BigDecimal roiPromedio;

    public VistaDashboardEjecutivo() {}

    public VistaDashboardEjecutivo(VistaDashboardEjecutivo value) {
        this.seccion = value.seccion;
        this.totalVehiculos = value.totalVehiculos;
        this.vehiculosDisponibles = value.vehiculosDisponibles;
        this.vehiculosVendidos = value.vehiculosVendidos;
        this.totalRepuestos = value.totalRepuestos;
        this.repuestosStock = value.repuestosStock;
        this.inversionTotal = value.inversionTotal;
        this.ingresosTotales = value.ingresosTotales;
        this.egresosTotales = value.egresosTotales;
        this.balanceNetoTotal = value.balanceNetoTotal;
        this.roiPromedio = value.roiPromedio;
    }

    public VistaDashboardEjecutivo(
        String seccion,
        Long totalVehiculos,
        Long vehiculosDisponibles,
        Long vehiculosVendidos,
        Long totalRepuestos,
        Long repuestosStock,
        BigDecimal inversionTotal,
        BigDecimal ingresosTotales,
        BigDecimal egresosTotales,
        BigDecimal balanceNetoTotal,
        BigDecimal roiPromedio
    ) {
        this.seccion = seccion;
        this.totalVehiculos = totalVehiculos;
        this.vehiculosDisponibles = vehiculosDisponibles;
        this.vehiculosVendidos = vehiculosVendidos;
        this.totalRepuestos = totalRepuestos;
        this.repuestosStock = repuestosStock;
        this.inversionTotal = inversionTotal;
        this.ingresosTotales = ingresosTotales;
        this.egresosTotales = egresosTotales;
        this.balanceNetoTotal = balanceNetoTotal;
        this.roiPromedio = roiPromedio;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.seccion</code>.
     */
    public String getSeccion() {
        return this.seccion;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.seccion</code>.
     */
    public VistaDashboardEjecutivo setSeccion(String seccion) {
        this.seccion = seccion;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.total_vehiculos</code>.
     */
    public Long getTotalVehiculos() {
        return this.totalVehiculos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.total_vehiculos</code>.
     */
    public VistaDashboardEjecutivo setTotalVehiculos(Long totalVehiculos) {
        this.totalVehiculos = totalVehiculos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.vehiculos_disponibles</code>.
     */
    public Long getVehiculosDisponibles() {
        return this.vehiculosDisponibles;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.vehiculos_disponibles</code>.
     */
    public VistaDashboardEjecutivo setVehiculosDisponibles(Long vehiculosDisponibles) {
        this.vehiculosDisponibles = vehiculosDisponibles;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.vehiculos_vendidos</code>.
     */
    public Long getVehiculosVendidos() {
        return this.vehiculosVendidos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.vehiculos_vendidos</code>.
     */
    public VistaDashboardEjecutivo setVehiculosVendidos(Long vehiculosVendidos) {
        this.vehiculosVendidos = vehiculosVendidos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.total_repuestos</code>.
     */
    public Long getTotalRepuestos() {
        return this.totalRepuestos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.total_repuestos</code>.
     */
    public VistaDashboardEjecutivo setTotalRepuestos(Long totalRepuestos) {
        this.totalRepuestos = totalRepuestos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.repuestos_stock</code>.
     */
    public Long getRepuestosStock() {
        return this.repuestosStock;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.repuestos_stock</code>.
     */
    public VistaDashboardEjecutivo setRepuestosStock(Long repuestosStock) {
        this.repuestosStock = repuestosStock;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.inversion_total</code>.
     */
    public BigDecimal getInversionTotal() {
        return this.inversionTotal;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.inversion_total</code>.
     */
    public VistaDashboardEjecutivo setInversionTotal(BigDecimal inversionTotal) {
        this.inversionTotal = inversionTotal;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.ingresos_totales</code>.
     */
    public BigDecimal getIngresosTotales() {
        return this.ingresosTotales;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.ingresos_totales</code>.
     */
    public VistaDashboardEjecutivo setIngresosTotales(BigDecimal ingresosTotales) {
        this.ingresosTotales = ingresosTotales;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.egresos_totales</code>.
     */
    public BigDecimal getEgresosTotales() {
        return this.egresosTotales;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.egresos_totales</code>.
     */
    public VistaDashboardEjecutivo setEgresosTotales(BigDecimal egresosTotales) {
        this.egresosTotales = egresosTotales;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.balance_neto_total</code>.
     */
    public BigDecimal getBalanceNetoTotal() {
        return this.balanceNetoTotal;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.balance_neto_total</code>.
     */
    public VistaDashboardEjecutivo setBalanceNetoTotal(BigDecimal balanceNetoTotal) {
        this.balanceNetoTotal = balanceNetoTotal;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.roi_promedio</code>.
     */
    public BigDecimal getRoiPromedio() {
        return this.roiPromedio;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_dashboard_ejecutivo.roi_promedio</code>.
     */
    public VistaDashboardEjecutivo setRoiPromedio(BigDecimal roiPromedio) {
        this.roiPromedio = roiPromedio;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final VistaDashboardEjecutivo other = (VistaDashboardEjecutivo) obj;
        if (this.seccion == null) {
            if (other.seccion != null)
                return false;
        }
        else if (!this.seccion.equals(other.seccion))
            return false;
        if (this.totalVehiculos == null) {
            if (other.totalVehiculos != null)
                return false;
        }
        else if (!this.totalVehiculos.equals(other.totalVehiculos))
            return false;
        if (this.vehiculosDisponibles == null) {
            if (other.vehiculosDisponibles != null)
                return false;
        }
        else if (!this.vehiculosDisponibles.equals(other.vehiculosDisponibles))
            return false;
        if (this.vehiculosVendidos == null) {
            if (other.vehiculosVendidos != null)
                return false;
        }
        else if (!this.vehiculosVendidos.equals(other.vehiculosVendidos))
            return false;
        if (this.totalRepuestos == null) {
            if (other.totalRepuestos != null)
                return false;
        }
        else if (!this.totalRepuestos.equals(other.totalRepuestos))
            return false;
        if (this.repuestosStock == null) {
            if (other.repuestosStock != null)
                return false;
        }
        else if (!this.repuestosStock.equals(other.repuestosStock))
            return false;
        if (this.inversionTotal == null) {
            if (other.inversionTotal != null)
                return false;
        }
        else if (!this.inversionTotal.equals(other.inversionTotal))
            return false;
        if (this.ingresosTotales == null) {
            if (other.ingresosTotales != null)
                return false;
        }
        else if (!this.ingresosTotales.equals(other.ingresosTotales))
            return false;
        if (this.egresosTotales == null) {
            if (other.egresosTotales != null)
                return false;
        }
        else if (!this.egresosTotales.equals(other.egresosTotales))
            return false;
        if (this.balanceNetoTotal == null) {
            if (other.balanceNetoTotal != null)
                return false;
        }
        else if (!this.balanceNetoTotal.equals(other.balanceNetoTotal))
            return false;
        if (this.roiPromedio == null) {
            if (other.roiPromedio != null)
                return false;
        }
        else if (!this.roiPromedio.equals(other.roiPromedio))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.seccion == null) ? 0 : this.seccion.hashCode());
        result = prime * result + ((this.totalVehiculos == null) ? 0 : this.totalVehiculos.hashCode());
        result = prime * result + ((this.vehiculosDisponibles == null) ? 0 : this.vehiculosDisponibles.hashCode());
        result = prime * result + ((this.vehiculosVendidos == null) ? 0 : this.vehiculosVendidos.hashCode());
        result = prime * result + ((this.totalRepuestos == null) ? 0 : this.totalRepuestos.hashCode());
        result = prime * result + ((this.repuestosStock == null) ? 0 : this.repuestosStock.hashCode());
        result = prime * result + ((this.inversionTotal == null) ? 0 : this.inversionTotal.hashCode());
        result = prime * result + ((this.ingresosTotales == null) ? 0 : this.ingresosTotales.hashCode());
        result = prime * result + ((this.egresosTotales == null) ? 0 : this.egresosTotales.hashCode());
        result = prime * result + ((this.balanceNetoTotal == null) ? 0 : this.balanceNetoTotal.hashCode());
        result = prime * result + ((this.roiPromedio == null) ? 0 : this.roiPromedio.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VistaDashboardEjecutivo (");

        sb.append(seccion);
        sb.append(", ").append(totalVehiculos);
        sb.append(", ").append(vehiculosDisponibles);
        sb.append(", ").append(vehiculosVendidos);
        sb.append(", ").append(totalRepuestos);
        sb.append(", ").append(repuestosStock);
        sb.append(", ").append(inversionTotal);
        sb.append(", ").append(ingresosTotales);
        sb.append(", ").append(egresosTotales);
        sb.append(", ").append(balanceNetoTotal);
        sb.append(", ").append(roiPromedio);

        sb.append(")");
        return sb.toString();
    }
}
