/*
 * This file is generated by jOOQ.
 */
package com.RodiejaContable.database.jooq.tables;


import com.RodiejaContable.database.jooq.SistemaVehicular;
import com.RodiejaContable.database.jooq.tables.records.VistaRentabilidadGeneracionesRecord;

import java.math.BigDecimal;
import java.util.Collection;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VistaRentabilidadGeneraciones extends TableImpl<VistaRentabilidadGeneracionesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>sistema_vehicular.vista_rentabilidad_generaciones</code>
     */
    public static final VistaRentabilidadGeneraciones VISTA_RENTABILIDAD_GENERACIONES = new VistaRentabilidadGeneraciones();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VistaRentabilidadGeneracionesRecord> getRecordType() {
        return VistaRentabilidadGeneracionesRecord.class;
    }

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.generacion_id</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Integer> GENERACION_ID = createField(DSL.name("generacion_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.generacion_completa</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, String> GENERACION_COMPLETA = createField(DSL.name("generacion_completa"), SQLDataType.VARCHAR(202).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.anio_inicio</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Integer> ANIO_INICIO = createField(DSL.name("anio_inicio"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.anio_fin</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Integer> ANIO_FIN = createField(DSL.name("anio_fin"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.total_vehiculos</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Long> TOTAL_VEHICULOS = createField(DSL.name("total_vehiculos"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.vehiculos_vendidos</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Long> VEHICULOS_VENDIDOS = createField(DSL.name("vehiculos_vendidos"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.vehiculos_disponibles</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, Long> VEHICULOS_DISPONIBLES = createField(DSL.name("vehiculos_disponibles"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.total_inversion</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> TOTAL_INVERSION = createField(DSL.name("total_inversion"), SQLDataType.DECIMAL(15, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.total_ingresos</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> TOTAL_INGRESOS = createField(DSL.name("total_ingresos"), SQLDataType.DECIMAL(15, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.total_egresos</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> TOTAL_EGRESOS = createField(DSL.name("total_egresos"), SQLDataType.DECIMAL(15, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.balance_neto</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> BALANCE_NETO = createField(DSL.name("balance_neto"), SQLDataType.DECIMAL(15, 2).defaultValue(DSL.inline("0.00", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.roi_porcentaje</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> ROI_PORCENTAJE = createField(DSL.name("roi_porcentaje"), SQLDataType.DECIMAL(21, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.utilidad_por_vehiculo</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> UTILIDAD_POR_VEHICULO = createField(DSL.name("utilidad_por_vehiculo"), SQLDataType.DECIMAL(16, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.multiplicador_inversion</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, BigDecimal> MULTIPLICADOR_INVERSION = createField(DSL.name("multiplicador_inversion"), SQLDataType.DECIMAL(18, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_rentabilidad_generaciones.clasificacion_rentabilidad</code>.
     */
    public final TableField<VistaRentabilidadGeneracionesRecord, String> CLASIFICACION_RENTABILIDAD = createField(DSL.name("clasificacion_rentabilidad"), SQLDataType.VARCHAR(9).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private VistaRentabilidadGeneraciones(Name alias, Table<VistaRentabilidadGeneracionesRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private VistaRentabilidadGeneraciones(Name alias, Table<VistaRentabilidadGeneracionesRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `vista_rentabilidad_generaciones` as select `g`.`id` AS `generacion_id`,concat(`m`.`nombre`,' ',`mo`.`nombre`,' ',`g`.`nombre`) AS `generacion_completa`,`g`.`anio_inicio` AS `anio_inicio`,`g`.`anio_fin` AS `anio_fin`,count(distinct `v`.`id`) AS `total_vehiculos`,count(distinct case when `v`.`estado` = 'VENDIDO' then `v`.`id` end) AS `vehiculos_vendidos`,count(distinct case when `v`.`estado` = 'DISPONIBLE' then `v`.`id` end) AS `vehiculos_disponibles`,`g`.`total_inversion` AS `total_inversion`,`g`.`total_ingresos` AS `total_ingresos`,`g`.`total_egresos` AS `total_egresos`,`g`.`balance_neto` AS `balance_neto`,case when `g`.`total_inversion` > 0 then round(`g`.`balance_neto` / `g`.`total_inversion` * 100,2) else 0 end AS `roi_porcentaje`,case when count(distinct `v`.`id`) > 0 then round(`g`.`balance_neto` / count(distinct `v`.`id`),2) else 0 end AS `utilidad_por_vehiculo`,round(`g`.`total_ingresos` / nullif(`g`.`total_inversion`,0),2) AS `multiplicador_inversion`,case when `g`.`balance_neto` > `g`.`total_inversion` * 0.3 then 'Excelente' when `g`.`balance_neto` > `g`.`total_inversion` * 0.15 then 'Buena' when `g`.`balance_neto` > 0 then 'Positiva' else 'PÃ©rdida' end AS `clasificacion_rentabilidad` from (((`sistema_vehicular`.`generaciones` `g` join `sistema_vehicular`.`modelos` `mo` on(`g`.`modelo_id` = `mo`.`id`)) join `sistema_vehicular`.`marcas` `m` on(`mo`.`marca_id` = `m`.`id`)) left join `sistema_vehicular`.`vehiculos` `v` on(`g`.`id` = `v`.`generacion_id` and `v`.`activo` = 1)) where `g`.`activo` = 1 group by `g`.`id`,`m`.`nombre`,`mo`.`nombre`,`g`.`nombre`,`g`.`anio_inicio`,`g`.`anio_fin`,`g`.`total_inversion`,`g`.`total_ingresos`,`g`.`total_egresos`,`g`.`balance_neto` order by case when `g`.`total_inversion` > 0 then round(`g`.`balance_neto` / `g`.`total_inversion` * 100,2) else 0 end desc"), where);
    }

    /**
     * Create an aliased
     * <code>sistema_vehicular.vista_rentabilidad_generaciones</code> table
     * reference
     */
    public VistaRentabilidadGeneraciones(String alias) {
        this(DSL.name(alias), VISTA_RENTABILIDAD_GENERACIONES);
    }

    /**
     * Create an aliased
     * <code>sistema_vehicular.vista_rentabilidad_generaciones</code> table
     * reference
     */
    public VistaRentabilidadGeneraciones(Name alias) {
        this(alias, VISTA_RENTABILIDAD_GENERACIONES);
    }

    /**
     * Create a <code>sistema_vehicular.vista_rentabilidad_generaciones</code>
     * table reference
     */
    public VistaRentabilidadGeneraciones() {
        this(DSL.name("vista_rentabilidad_generaciones"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : SistemaVehicular.SISTEMA_VEHICULAR;
    }

    @Override
    public VistaRentabilidadGeneraciones as(String alias) {
        return new VistaRentabilidadGeneraciones(DSL.name(alias), this);
    }

    @Override
    public VistaRentabilidadGeneraciones as(Name alias) {
        return new VistaRentabilidadGeneraciones(alias, this);
    }

    @Override
    public VistaRentabilidadGeneraciones as(Table<?> alias) {
        return new VistaRentabilidadGeneraciones(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaRentabilidadGeneraciones rename(String name) {
        return new VistaRentabilidadGeneraciones(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaRentabilidadGeneraciones rename(Name name) {
        return new VistaRentabilidadGeneraciones(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaRentabilidadGeneraciones rename(Table<?> name) {
        return new VistaRentabilidadGeneraciones(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones where(Condition condition) {
        return new VistaRentabilidadGeneraciones(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaRentabilidadGeneraciones where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaRentabilidadGeneraciones where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaRentabilidadGeneraciones where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaRentabilidadGeneraciones where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaRentabilidadGeneraciones whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
