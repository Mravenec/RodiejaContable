/*
 * This file is generated by jOOQ.
 */
package com.RodiejaContable.database.jooq.tables;


import com.RodiejaContable.database.jooq.SistemaVehicular;
import com.RodiejaContable.database.jooq.tables.records.VistaTopProductosVendidosRecord;

import java.math.BigDecimal;
import java.util.Collection;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VistaTopProductosVendidos extends TableImpl<VistaTopProductosVendidosRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>sistema_vehicular.vista_top_productos_vendidos</code>
     */
    public static final VistaTopProductosVendidos VISTA_TOP_PRODUCTOS_VENDIDOS = new VistaTopProductosVendidos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VistaTopProductosVendidosRecord> getRecordType() {
        return VistaTopProductosVendidosRecord.class;
    }

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.tipo_producto</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, String> TIPO_PRODUCTO = createField(DSL.name("tipo_producto"), SQLDataType.VARCHAR(9).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.producto</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, String> PRODUCTO = createField(DSL.name("producto"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.veces_vendido</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, Long> VECES_VENDIDO = createField(DSL.name("veces_vendido"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.total_ingresos</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, BigDecimal> TOTAL_INGRESOS = createField(DSL.name("total_ingresos"), SQLDataType.DECIMAL(34, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.promedio_venta</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, BigDecimal> PROMEDIO_VENTA = createField(DSL.name("promedio_venta"), SQLDataType.DECIMAL(13, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_top_productos_vendidos.total_comisiones</code>.
     */
    public final TableField<VistaTopProductosVendidosRecord, BigDecimal> TOTAL_COMISIONES = createField(DSL.name("total_comisiones"), SQLDataType.DECIMAL(34, 2).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    private VistaTopProductosVendidos(Name alias, Table<VistaTopProductosVendidosRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private VistaTopProductosVendidos(Name alias, Table<VistaTopProductosVendidosRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `vista_top_productos_vendidos` as select 'Vehículos' AS `tipo_producto`,concat(`vvc`.`marca`,' ',`vvc`.`modelo`,' ',`vvc`.`generacion`) AS `producto`,count(distinct `tf`.`id`) AS `veces_vendido`,sum(`tf`.`monto`) AS `total_ingresos`,round(avg(`tf`.`monto`),2) AS `promedio_venta`,sum(`tf`.`comision_empleado`) AS `total_comisiones` from (((`sistema_vehicular`.`transacciones_financieras` `tf` join `sistema_vehicular`.`tipos_transacciones` `tt` on(`tf`.`tipo_transaccion_id` = `tt`.`id`)) join `sistema_vehicular`.`vehiculos` `v` on(`tf`.`vehiculo_id` = `v`.`id`)) join `sistema_vehicular`.`vista_vehiculos_completa` `vvc` on(`v`.`id` = `vvc`.`id`)) where `tt`.`categoria` = 'INGRESO' and `tf`.`activo` = 1 group by `vvc`.`marca`,`vvc`.`modelo`,`vvc`.`generacion` union all select 'Repuestos' AS `tipo_producto`,concat(`ir`.`parte_vehiculo`,' - ',coalesce(`ir`.`descripcion`,'Sin descripción')) AS `producto`,count(distinct `tf`.`id`) AS `veces_vendido`,sum(`tf`.`monto`) AS `total_ingresos`,round(avg(`tf`.`monto`),2) AS `promedio_venta`,sum(`tf`.`comision_empleado`) AS `total_comisiones` from ((`sistema_vehicular`.`transacciones_financieras` `tf` join `sistema_vehicular`.`tipos_transacciones` `tt` on(`tf`.`tipo_transaccion_id` = `tt`.`id`)) join `sistema_vehicular`.`inventario_repuestos` `ir` on(`tf`.`repuesto_id` = `ir`.`id`)) where `tt`.`categoria` = 'INGRESO' and `tf`.`activo` = 1 group by `ir`.`parte_vehiculo`,`ir`.`descripcion` order by `total_ingresos` desc"), where);
    }

    /**
     * Create an aliased
     * <code>sistema_vehicular.vista_top_productos_vendidos</code> table
     * reference
     */
    public VistaTopProductosVendidos(String alias) {
        this(DSL.name(alias), VISTA_TOP_PRODUCTOS_VENDIDOS);
    }

    /**
     * Create an aliased
     * <code>sistema_vehicular.vista_top_productos_vendidos</code> table
     * reference
     */
    public VistaTopProductosVendidos(Name alias) {
        this(alias, VISTA_TOP_PRODUCTOS_VENDIDOS);
    }

    /**
     * Create a <code>sistema_vehicular.vista_top_productos_vendidos</code>
     * table reference
     */
    public VistaTopProductosVendidos() {
        this(DSL.name("vista_top_productos_vendidos"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : SistemaVehicular.SISTEMA_VEHICULAR;
    }

    @Override
    public VistaTopProductosVendidos as(String alias) {
        return new VistaTopProductosVendidos(DSL.name(alias), this);
    }

    @Override
    public VistaTopProductosVendidos as(Name alias) {
        return new VistaTopProductosVendidos(alias, this);
    }

    @Override
    public VistaTopProductosVendidos as(Table<?> alias) {
        return new VistaTopProductosVendidos(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaTopProductosVendidos rename(String name) {
        return new VistaTopProductosVendidos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaTopProductosVendidos rename(Name name) {
        return new VistaTopProductosVendidos(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaTopProductosVendidos rename(Table<?> name) {
        return new VistaTopProductosVendidos(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos where(Condition condition) {
        return new VistaTopProductosVendidos(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaTopProductosVendidos where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaTopProductosVendidos where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaTopProductosVendidos where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public VistaTopProductosVendidos where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public VistaTopProductosVendidos whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
