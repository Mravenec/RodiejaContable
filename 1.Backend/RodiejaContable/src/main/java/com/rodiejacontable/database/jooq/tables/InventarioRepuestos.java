/*
 * This file is generated by jOOQ.
 */
package com.rodiejacontable.database.jooq.tables;


import com.rodiejacontable.database.jooq.Indexes;
import com.rodiejacontable.database.jooq.Keys;
import com.rodiejacontable.database.jooq.SistemaVehicular;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosBodega;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosCarton;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosCondicion;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosEstado;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosEstante;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosHorizontal;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosMalla;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosNivel;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosPared;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosParteVehiculo;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosPiso;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosPlastica;
import com.rodiejacontable.database.jooq.enums.InventarioRepuestosZona;
import com.rodiejacontable.database.jooq.tables.records.InventarioRepuestosRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InventarioRepuestos extends TableImpl<InventarioRepuestosRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>sistema_vehicular.inventario_repuestos</code>
     */
    public static final InventarioRepuestos INVENTARIO_REPUESTOS = new InventarioRepuestos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InventarioRepuestosRecord> getRecordType() {
        return InventarioRepuestosRecord.class;
    }

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.id</code>.
     */
    public final TableField<InventarioRepuestosRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.codigo_repuesto</code>.
     */
    public final TableField<InventarioRepuestosRecord, String> CODIGO_REPUESTO = createField(DSL.name("codigo_repuesto"), SQLDataType.VARCHAR(100).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.vehiculo_origen_id</code>.
     */
    public final TableField<InventarioRepuestosRecord, Integer> VEHICULO_ORIGEN_ID = createField(DSL.name("vehiculo_origen_id"), SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.anio_registro</code>.
     */
    public final TableField<InventarioRepuestosRecord, Short> ANIO_REGISTRO = createField(DSL.name("anio_registro"), SQLDataType.SMALLINT, this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.mes_registro</code>.
     */
    public final TableField<InventarioRepuestosRecord, Byte> MES_REGISTRO = createField(DSL.name("mes_registro"), SQLDataType.TINYINT, this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.codigo_ubicacion</code>.
     */
    public final TableField<InventarioRepuestosRecord, String> CODIGO_UBICACION = createField(DSL.name("codigo_ubicacion"), SQLDataType.VARCHAR(100).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.imagen_url</code>.
     */
    public final TableField<InventarioRepuestosRecord, String> IMAGEN_URL = createField(DSL.name("imagen_url"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.parte_vehiculo</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosParteVehiculo> PARTE_VEHICULO = createField(DSL.name("parte_vehiculo"), SQLDataType.VARCHAR(28).nullable(false).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosParteVehiculo.class), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.descripcion</code>.
     */
    public final TableField<InventarioRepuestosRecord, String> DESCRIPCION = createField(DSL.name("descripcion"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.precio_costo</code>.
     */
    public final TableField<InventarioRepuestosRecord, BigDecimal> PRECIO_COSTO = createField(DSL.name("precio_costo"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.field(DSL.raw("0.00"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.precio_venta</code>.
     */
    public final TableField<InventarioRepuestosRecord, BigDecimal> PRECIO_VENTA = createField(DSL.name("precio_venta"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.field(DSL.raw("0.00"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.precio_mayoreo</code>.
     */
    public final TableField<InventarioRepuestosRecord, BigDecimal> PRECIO_MAYOREO = createField(DSL.name("precio_mayoreo"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.field(DSL.raw("0.00"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.formula_15</code>.
     */
    public final TableField<InventarioRepuestosRecord, BigDecimal> FORMULA_15 = createField(DSL.name("formula_15"), SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.formula_30</code>.
     */
    public final TableField<InventarioRepuestosRecord, BigDecimal> FORMULA_30 = createField(DSL.name("formula_30"), SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.bodega</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosBodega> BODEGA = createField(DSL.name("bodega"), SQLDataType.VARCHAR(2).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosBodega.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.zona</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosZona> ZONA = createField(DSL.name("zona"), SQLDataType.VARCHAR(4).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosZona.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.pared</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosPared> PARED = createField(DSL.name("pared"), SQLDataType.VARCHAR(3).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosPared.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.malla</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosMalla> MALLA = createField(DSL.name("malla"), SQLDataType.VARCHAR(4).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosMalla.class), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.horizontal</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosHorizontal> HORIZONTAL = createField(DSL.name("horizontal"), SQLDataType.VARCHAR(3).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosHorizontal.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.estante</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosEstante> ESTANTE = createField(DSL.name("estante"), SQLDataType.VARCHAR(3).defaultValue(DSL.field(DSL.raw("'E1'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosEstante.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.nivel</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosNivel> NIVEL = createField(DSL.name("nivel"), SQLDataType.VARCHAR(4).defaultValue(DSL.field(DSL.raw("'0-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosNivel.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.piso</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosPiso> PISO = createField(DSL.name("piso"), SQLDataType.VARCHAR(4).defaultValue(DSL.field(DSL.raw("'P1-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosPiso.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.plastica</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosPlastica> PLASTICA = createField(DSL.name("plastica"), SQLDataType.VARCHAR(5).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosPlastica.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.carton</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosCarton> CARTON = createField(DSL.name("carton"), SQLDataType.VARCHAR(5).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosCarton.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.posicion</code>.
     */
    public final TableField<InventarioRepuestosRecord, String> POSICION = createField(DSL.name("posicion"), SQLDataType.VARCHAR(10).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.cantidad</code>.
     */
    public final TableField<InventarioRepuestosRecord, UInteger> CANTIDAD = createField(DSL.name("cantidad"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.field(DSL.raw("1"), SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.estado</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosEstado> ESTADO = createField(DSL.name("estado"), SQLDataType.VARCHAR(13).defaultValue(DSL.field(DSL.raw("'STOCK'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosEstado.class), this, "");

    /**
     * The column <code>sistema_vehicular.inventario_repuestos.condicion</code>.
     */
    public final TableField<InventarioRepuestosRecord, InventarioRepuestosCondicion> CONDICION = createField(DSL.name("condicion"), SQLDataType.VARCHAR(5).defaultValue(DSL.field(DSL.raw("'100%-'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.InventarioRepuestosCondicion.class), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.fecha_creacion</code>.
     */
    public final TableField<InventarioRepuestosRecord, LocalDateTime> FECHA_CREACION = createField(DSL.name("fecha_creacion"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field(DSL.raw("current_timestamp()"), SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.inventario_repuestos.fecha_actualizacion</code>.
     */
    public final TableField<InventarioRepuestosRecord, LocalDateTime> FECHA_ACTUALIZACION = createField(DSL.name("fecha_actualizacion"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field(DSL.raw("current_timestamp()"), SQLDataType.LOCALDATETIME)), this, "");

    private InventarioRepuestos(Name alias, Table<InventarioRepuestosRecord> aliased) {
        this(alias, aliased, null);
    }

    private InventarioRepuestos(Name alias, Table<InventarioRepuestosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>sistema_vehicular.inventario_repuestos</code>
     * table reference
     */
    public InventarioRepuestos(String alias) {
        this(DSL.name(alias), INVENTARIO_REPUESTOS);
    }

    /**
     * Create an aliased <code>sistema_vehicular.inventario_repuestos</code>
     * table reference
     */
    public InventarioRepuestos(Name alias) {
        this(alias, INVENTARIO_REPUESTOS);
    }

    /**
     * Create a <code>sistema_vehicular.inventario_repuestos</code> table
     * reference
     */
    public InventarioRepuestos() {
        this(DSL.name("inventario_repuestos"), null);
    }

    public <O extends Record> InventarioRepuestos(Table<O> child, ForeignKey<O, InventarioRepuestosRecord> key) {
        super(child, key, INVENTARIO_REPUESTOS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : SistemaVehicular.SISTEMA_VEHICULAR;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.INVENTARIO_REPUESTOS_IDX_ESTADO, Indexes.INVENTARIO_REPUESTOS_IDX_FECHA_REGISTRO, Indexes.INVENTARIO_REPUESTOS_IDX_PARTE_VEHICULO, Indexes.INVENTARIO_REPUESTOS_IDX_VEHICULO_ORIGEN);
    }

    @Override
    public Identity<InventarioRepuestosRecord, Integer> getIdentity() {
        return (Identity<InventarioRepuestosRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<InventarioRepuestosRecord> getPrimaryKey() {
        return Keys.KEY_INVENTARIO_REPUESTOS_PRIMARY;
    }

    @Override
    public List<UniqueKey<InventarioRepuestosRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_INVENTARIO_REPUESTOS_CODIGO_REPUESTO);
    }

    @Override
    public List<ForeignKey<InventarioRepuestosRecord, ?>> getReferences() {
        return Arrays.asList(Keys.INVENTARIO_REPUESTOS_IBFK_1);
    }

    private transient Vehiculos _vehiculos;

    /**
     * Get the implicit join path to the
     * <code>sistema_vehicular.vehiculos</code> table.
     */
    public Vehiculos vehiculos() {
        if (_vehiculos == null)
            _vehiculos = new Vehiculos(this, Keys.INVENTARIO_REPUESTOS_IBFK_1);

        return _vehiculos;
    }

    @Override
    public InventarioRepuestos as(String alias) {
        return new InventarioRepuestos(DSL.name(alias), this);
    }

    @Override
    public InventarioRepuestos as(Name alias) {
        return new InventarioRepuestos(alias, this);
    }

    @Override
    public InventarioRepuestos as(Table<?> alias) {
        return new InventarioRepuestos(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public InventarioRepuestos rename(String name) {
        return new InventarioRepuestos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InventarioRepuestos rename(Name name) {
        return new InventarioRepuestos(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public InventarioRepuestos rename(Table<?> name) {
        return new InventarioRepuestos(name.getQualifiedName(), null);
    }
}
