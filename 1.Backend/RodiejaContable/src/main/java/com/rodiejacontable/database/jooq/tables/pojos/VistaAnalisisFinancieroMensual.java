/*
 * This file is generated by jOOQ.
 */
package com.rodiejacontable.database.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VistaAnalisisFinancieroMensual implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer anio;
    private Integer mes;
    private String nombreMes;
    private Long totalTransacciones;
    private BigDecimal totalIngresosBrutos;
    private BigDecimal totalEgresos;
    private BigDecimal totalComisiones;
    private BigDecimal totalIngresosNetos;
    private BigDecimal balanceNeto;
    private Long vehiculosVendidos;
    private Long repuestosVendidos;
    private BigDecimal promedioVenta;
    private BigDecimal ratioIngresosEgresos;
    private BigDecimal porcentajeComisiones;
    private BigDecimal margenUtilidadPorcentaje;

    public VistaAnalisisFinancieroMensual() {}

    public VistaAnalisisFinancieroMensual(VistaAnalisisFinancieroMensual value) {
        this.anio = value.anio;
        this.mes = value.mes;
        this.nombreMes = value.nombreMes;
        this.totalTransacciones = value.totalTransacciones;
        this.totalIngresosBrutos = value.totalIngresosBrutos;
        this.totalEgresos = value.totalEgresos;
        this.totalComisiones = value.totalComisiones;
        this.totalIngresosNetos = value.totalIngresosNetos;
        this.balanceNeto = value.balanceNeto;
        this.vehiculosVendidos = value.vehiculosVendidos;
        this.repuestosVendidos = value.repuestosVendidos;
        this.promedioVenta = value.promedioVenta;
        this.ratioIngresosEgresos = value.ratioIngresosEgresos;
        this.porcentajeComisiones = value.porcentajeComisiones;
        this.margenUtilidadPorcentaje = value.margenUtilidadPorcentaje;
    }

    public VistaAnalisisFinancieroMensual(
        Integer anio,
        Integer mes,
        String nombreMes,
        Long totalTransacciones,
        BigDecimal totalIngresosBrutos,
        BigDecimal totalEgresos,
        BigDecimal totalComisiones,
        BigDecimal totalIngresosNetos,
        BigDecimal balanceNeto,
        Long vehiculosVendidos,
        Long repuestosVendidos,
        BigDecimal promedioVenta,
        BigDecimal ratioIngresosEgresos,
        BigDecimal porcentajeComisiones,
        BigDecimal margenUtilidadPorcentaje
    ) {
        this.anio = anio;
        this.mes = mes;
        this.nombreMes = nombreMes;
        this.totalTransacciones = totalTransacciones;
        this.totalIngresosBrutos = totalIngresosBrutos;
        this.totalEgresos = totalEgresos;
        this.totalComisiones = totalComisiones;
        this.totalIngresosNetos = totalIngresosNetos;
        this.balanceNeto = balanceNeto;
        this.vehiculosVendidos = vehiculosVendidos;
        this.repuestosVendidos = repuestosVendidos;
        this.promedioVenta = promedioVenta;
        this.ratioIngresosEgresos = ratioIngresosEgresos;
        this.porcentajeComisiones = porcentajeComisiones;
        this.margenUtilidadPorcentaje = margenUtilidadPorcentaje;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.anio</code>.
     */
    public Integer getAnio() {
        return this.anio;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.anio</code>.
     */
    public VistaAnalisisFinancieroMensual setAnio(Integer anio) {
        this.anio = anio;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.mes</code>.
     */
    public Integer getMes() {
        return this.mes;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.mes</code>.
     */
    public VistaAnalisisFinancieroMensual setMes(Integer mes) {
        this.mes = mes;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.nombre_mes</code>.
     */
    public String getNombreMes() {
        return this.nombreMes;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.nombre_mes</code>.
     */
    public VistaAnalisisFinancieroMensual setNombreMes(String nombreMes) {
        this.nombreMes = nombreMes;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_transacciones</code>.
     */
    public Long getTotalTransacciones() {
        return this.totalTransacciones;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_transacciones</code>.
     */
    public VistaAnalisisFinancieroMensual setTotalTransacciones(Long totalTransacciones) {
        this.totalTransacciones = totalTransacciones;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_ingresos_brutos</code>.
     */
    public BigDecimal getTotalIngresosBrutos() {
        return this.totalIngresosBrutos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_ingresos_brutos</code>.
     */
    public VistaAnalisisFinancieroMensual setTotalIngresosBrutos(BigDecimal totalIngresosBrutos) {
        this.totalIngresosBrutos = totalIngresosBrutos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_egresos</code>.
     */
    public BigDecimal getTotalEgresos() {
        return this.totalEgresos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_egresos</code>.
     */
    public VistaAnalisisFinancieroMensual setTotalEgresos(BigDecimal totalEgresos) {
        this.totalEgresos = totalEgresos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_comisiones</code>.
     */
    public BigDecimal getTotalComisiones() {
        return this.totalComisiones;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_comisiones</code>.
     */
    public VistaAnalisisFinancieroMensual setTotalComisiones(BigDecimal totalComisiones) {
        this.totalComisiones = totalComisiones;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_ingresos_netos</code>.
     */
    public BigDecimal getTotalIngresosNetos() {
        return this.totalIngresosNetos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.total_ingresos_netos</code>.
     */
    public VistaAnalisisFinancieroMensual setTotalIngresosNetos(BigDecimal totalIngresosNetos) {
        this.totalIngresosNetos = totalIngresosNetos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.balance_neto</code>.
     */
    public BigDecimal getBalanceNeto() {
        return this.balanceNeto;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.balance_neto</code>.
     */
    public VistaAnalisisFinancieroMensual setBalanceNeto(BigDecimal balanceNeto) {
        this.balanceNeto = balanceNeto;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.vehiculos_vendidos</code>.
     */
    public Long getVehiculosVendidos() {
        return this.vehiculosVendidos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.vehiculos_vendidos</code>.
     */
    public VistaAnalisisFinancieroMensual setVehiculosVendidos(Long vehiculosVendidos) {
        this.vehiculosVendidos = vehiculosVendidos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.repuestos_vendidos</code>.
     */
    public Long getRepuestosVendidos() {
        return this.repuestosVendidos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.repuestos_vendidos</code>.
     */
    public VistaAnalisisFinancieroMensual setRepuestosVendidos(Long repuestosVendidos) {
        this.repuestosVendidos = repuestosVendidos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.promedio_venta</code>.
     */
    public BigDecimal getPromedioVenta() {
        return this.promedioVenta;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.promedio_venta</code>.
     */
    public VistaAnalisisFinancieroMensual setPromedioVenta(BigDecimal promedioVenta) {
        this.promedioVenta = promedioVenta;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.ratio_ingresos_egresos</code>.
     */
    public BigDecimal getRatioIngresosEgresos() {
        return this.ratioIngresosEgresos;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.ratio_ingresos_egresos</code>.
     */
    public VistaAnalisisFinancieroMensual setRatioIngresosEgresos(BigDecimal ratioIngresosEgresos) {
        this.ratioIngresosEgresos = ratioIngresosEgresos;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.porcentaje_comisiones</code>.
     */
    public BigDecimal getPorcentajeComisiones() {
        return this.porcentajeComisiones;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.porcentaje_comisiones</code>.
     */
    public VistaAnalisisFinancieroMensual setPorcentajeComisiones(BigDecimal porcentajeComisiones) {
        this.porcentajeComisiones = porcentajeComisiones;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.margen_utilidad_porcentaje</code>.
     */
    public BigDecimal getMargenUtilidadPorcentaje() {
        return this.margenUtilidadPorcentaje;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.vista_analisis_financiero_mensual.margen_utilidad_porcentaje</code>.
     */
    public VistaAnalisisFinancieroMensual setMargenUtilidadPorcentaje(BigDecimal margenUtilidadPorcentaje) {
        this.margenUtilidadPorcentaje = margenUtilidadPorcentaje;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final VistaAnalisisFinancieroMensual other = (VistaAnalisisFinancieroMensual) obj;
        if (this.anio == null) {
            if (other.anio != null)
                return false;
        }
        else if (!this.anio.equals(other.anio))
            return false;
        if (this.mes == null) {
            if (other.mes != null)
                return false;
        }
        else if (!this.mes.equals(other.mes))
            return false;
        if (this.nombreMes == null) {
            if (other.nombreMes != null)
                return false;
        }
        else if (!this.nombreMes.equals(other.nombreMes))
            return false;
        if (this.totalTransacciones == null) {
            if (other.totalTransacciones != null)
                return false;
        }
        else if (!this.totalTransacciones.equals(other.totalTransacciones))
            return false;
        if (this.totalIngresosBrutos == null) {
            if (other.totalIngresosBrutos != null)
                return false;
        }
        else if (!this.totalIngresosBrutos.equals(other.totalIngresosBrutos))
            return false;
        if (this.totalEgresos == null) {
            if (other.totalEgresos != null)
                return false;
        }
        else if (!this.totalEgresos.equals(other.totalEgresos))
            return false;
        if (this.totalComisiones == null) {
            if (other.totalComisiones != null)
                return false;
        }
        else if (!this.totalComisiones.equals(other.totalComisiones))
            return false;
        if (this.totalIngresosNetos == null) {
            if (other.totalIngresosNetos != null)
                return false;
        }
        else if (!this.totalIngresosNetos.equals(other.totalIngresosNetos))
            return false;
        if (this.balanceNeto == null) {
            if (other.balanceNeto != null)
                return false;
        }
        else if (!this.balanceNeto.equals(other.balanceNeto))
            return false;
        if (this.vehiculosVendidos == null) {
            if (other.vehiculosVendidos != null)
                return false;
        }
        else if (!this.vehiculosVendidos.equals(other.vehiculosVendidos))
            return false;
        if (this.repuestosVendidos == null) {
            if (other.repuestosVendidos != null)
                return false;
        }
        else if (!this.repuestosVendidos.equals(other.repuestosVendidos))
            return false;
        if (this.promedioVenta == null) {
            if (other.promedioVenta != null)
                return false;
        }
        else if (!this.promedioVenta.equals(other.promedioVenta))
            return false;
        if (this.ratioIngresosEgresos == null) {
            if (other.ratioIngresosEgresos != null)
                return false;
        }
        else if (!this.ratioIngresosEgresos.equals(other.ratioIngresosEgresos))
            return false;
        if (this.porcentajeComisiones == null) {
            if (other.porcentajeComisiones != null)
                return false;
        }
        else if (!this.porcentajeComisiones.equals(other.porcentajeComisiones))
            return false;
        if (this.margenUtilidadPorcentaje == null) {
            if (other.margenUtilidadPorcentaje != null)
                return false;
        }
        else if (!this.margenUtilidadPorcentaje.equals(other.margenUtilidadPorcentaje))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.anio == null) ? 0 : this.anio.hashCode());
        result = prime * result + ((this.mes == null) ? 0 : this.mes.hashCode());
        result = prime * result + ((this.nombreMes == null) ? 0 : this.nombreMes.hashCode());
        result = prime * result + ((this.totalTransacciones == null) ? 0 : this.totalTransacciones.hashCode());
        result = prime * result + ((this.totalIngresosBrutos == null) ? 0 : this.totalIngresosBrutos.hashCode());
        result = prime * result + ((this.totalEgresos == null) ? 0 : this.totalEgresos.hashCode());
        result = prime * result + ((this.totalComisiones == null) ? 0 : this.totalComisiones.hashCode());
        result = prime * result + ((this.totalIngresosNetos == null) ? 0 : this.totalIngresosNetos.hashCode());
        result = prime * result + ((this.balanceNeto == null) ? 0 : this.balanceNeto.hashCode());
        result = prime * result + ((this.vehiculosVendidos == null) ? 0 : this.vehiculosVendidos.hashCode());
        result = prime * result + ((this.repuestosVendidos == null) ? 0 : this.repuestosVendidos.hashCode());
        result = prime * result + ((this.promedioVenta == null) ? 0 : this.promedioVenta.hashCode());
        result = prime * result + ((this.ratioIngresosEgresos == null) ? 0 : this.ratioIngresosEgresos.hashCode());
        result = prime * result + ((this.porcentajeComisiones == null) ? 0 : this.porcentajeComisiones.hashCode());
        result = prime * result + ((this.margenUtilidadPorcentaje == null) ? 0 : this.margenUtilidadPorcentaje.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VistaAnalisisFinancieroMensual (");

        sb.append(anio);
        sb.append(", ").append(mes);
        sb.append(", ").append(nombreMes);
        sb.append(", ").append(totalTransacciones);
        sb.append(", ").append(totalIngresosBrutos);
        sb.append(", ").append(totalEgresos);
        sb.append(", ").append(totalComisiones);
        sb.append(", ").append(totalIngresosNetos);
        sb.append(", ").append(balanceNeto);
        sb.append(", ").append(vehiculosVendidos);
        sb.append(", ").append(repuestosVendidos);
        sb.append(", ").append(promedioVenta);
        sb.append(", ").append(ratioIngresosEgresos);
        sb.append(", ").append(porcentajeComisiones);
        sb.append(", ").append(margenUtilidadPorcentaje);

        sb.append(")");
        return sb.toString();
    }
}
