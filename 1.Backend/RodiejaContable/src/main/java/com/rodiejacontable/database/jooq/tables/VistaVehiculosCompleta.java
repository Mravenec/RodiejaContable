/*
 * This file is generated by jOOQ.
 */
package com.rodiejacontable.database.jooq.tables;


import com.rodiejacontable.database.jooq.SistemaVehicular;
import com.rodiejacontable.database.jooq.enums.VistaVehiculosCompletaEstado;
import com.rodiejacontable.database.jooq.tables.records.VistaVehiculosCompletaRecord;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VistaVehiculosCompleta extends TableImpl<VistaVehiculosCompletaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>sistema_vehicular.vista_vehiculos_completa</code>
     */
    public static final VistaVehiculosCompleta VISTA_VEHICULOS_COMPLETA = new VistaVehiculosCompleta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VistaVehiculosCompletaRecord> getRecordType() {
        return VistaVehiculosCompletaRecord.class;
    }

    /**
     * The column <code>sistema_vehicular.vista_vehiculos_completa.id</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.codigo_vehiculo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> CODIGO_VEHICULO = createField(DSL.name("codigo_vehiculo"), SQLDataType.VARCHAR(20).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sistema_vehicular.vista_vehiculos_completa.anio</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, Integer> ANIO = createField(DSL.name("anio"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.precio_compra</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> PRECIO_COMPRA = createField(DSL.name("precio_compra"), SQLDataType.DECIMAL(12, 2).nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.costo_grua</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> COSTO_GRUA = createField(DSL.name("costo_grua"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.field(DSL.raw("0.00"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.comisiones</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> COMISIONES = createField(DSL.name("comisiones"), SQLDataType.DECIMAL(10, 2).defaultValue(DSL.field(DSL.raw("0.00"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.inversion_total</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> INVERSION_TOTAL = createField(DSL.name("inversion_total"), SQLDataType.DECIMAL(12, 2).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.precio_venta</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> PRECIO_VENTA = createField(DSL.name("precio_venta"), SQLDataType.DECIMAL(12, 2).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.fecha_ingreso</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, LocalDate> FECHA_INGRESO = createField(DSL.name("fecha_ingreso"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.fecha_venta</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, LocalDate> FECHA_VENTA = createField(DSL.name("fecha_venta"), SQLDataType.LOCALDATE.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.LOCALDATE)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.estado</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, VistaVehiculosCompletaEstado> ESTADO = createField(DSL.name("estado"), SQLDataType.VARCHAR(10).defaultValue(DSL.field(DSL.raw("'DISPONIBLE'"), SQLDataType.VARCHAR)).asEnumDataType(com.rodiejacontable.database.jooq.enums.VistaVehiculosCompletaEstado.class), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.activo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, Byte> ACTIVO = createField(DSL.name("activo"), SQLDataType.TINYINT.defaultValue(DSL.field(DSL.raw("1"), SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>sistema_vehicular.vista_vehiculos_completa.notas</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> NOTAS = createField(DSL.name("notas"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "");

    /**
     * The column <code>sistema_vehicular.vista_vehiculos_completa.marca</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> MARCA = createField(DSL.name("marca"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.modelo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> MODELO = createField(DSL.name("modelo"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.generacion</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> GENERACION = createField(DSL.name("generacion"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.generacion_descripcion</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> GENERACION_DESCRIPCION = createField(DSL.name("generacion_descripcion"), SQLDataType.VARCHAR(200).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.anio_inicio</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, Integer> ANIO_INICIO = createField(DSL.name("anio_inicio"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.anio_fin</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, Integer> ANIO_FIN = createField(DSL.name("anio_fin"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.clave_generacion</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, String> CLAVE_GENERACION = createField(DSL.name("clave_generacion"), SQLDataType.VARCHAR(202).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.total_ingresos_vehiculo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> TOTAL_INGRESOS_VEHICULO = createField(DSL.name("total_ingresos_vehiculo"), SQLDataType.DECIMAL(34, 2).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.total_egresos_vehiculo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> TOTAL_EGRESOS_VEHICULO = createField(DSL.name("total_egresos_vehiculo"), SQLDataType.DECIMAL(34, 2).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>sistema_vehicular.vista_vehiculos_completa.balance_neto_vehiculo</code>.
     */
    public final TableField<VistaVehiculosCompletaRecord, BigDecimal> BALANCE_NETO_VEHICULO = createField(DSL.name("balance_neto_vehiculo"), SQLDataType.DECIMAL(36, 2).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.DECIMAL)), this, "");

    private VistaVehiculosCompleta(Name alias, Table<VistaVehiculosCompletaRecord> aliased) {
        this(alias, aliased, null);
    }

    private VistaVehiculosCompleta(Name alias, Table<VistaVehiculosCompletaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `vista_vehiculos_completa` as select `v`.`id` AS `id`,`v`.`codigo_vehiculo` AS `codigo_vehiculo`,`v`.`anio` AS `anio`,`v`.`precio_compra` AS `precio_compra`,`v`.`costo_grua` AS `costo_grua`,`v`.`comisiones` AS `comisiones`,`v`.`inversion_total` AS `inversion_total`,`v`.`precio_venta` AS `precio_venta`,`v`.`fecha_ingreso` AS `fecha_ingreso`,`v`.`fecha_venta` AS `fecha_venta`,`v`.`estado` AS `estado`,`v`.`activo` AS `activo`,`v`.`notas` AS `notas`,`m`.`nombre` AS `marca`,`mo`.`nombre` AS `modelo`,`g`.`nombre` AS `generacion`,`g`.`descripcion` AS `generacion_descripcion`,`g`.`anio_inicio` AS `anio_inicio`,`g`.`anio_fin` AS `anio_fin`,concat(`m`.`nombre`,'-',`mo`.`nombre`,'-',`g`.`nombre`) AS `clave_generacion`,coalesce(`ingresos`.`total_ingresos`,0) AS `total_ingresos_vehiculo`,coalesce(`egresos`.`total_egresos`,0) AS `total_egresos_vehiculo`,coalesce(`ingresos`.`total_ingresos`,0) - coalesce(`egresos`.`total_egresos`,0) - `v`.`inversion_total` AS `balance_neto_vehiculo` from (((((`sistema_vehicular`.`vehiculos` `v` join `sistema_vehicular`.`generaciones` `g` on(`v`.`generacion_id` = `g`.`id`)) join `sistema_vehicular`.`modelos` `mo` on(`g`.`modelo_id` = `mo`.`id`)) join `sistema_vehicular`.`marcas` `m` on(`mo`.`marca_id` = `m`.`id`)) left join (select `tf`.`vehiculo_id` AS `vehiculo_id`,sum(`tf`.`monto`) AS `total_ingresos` from (`sistema_vehicular`.`transacciones_financieras` `tf` join `sistema_vehicular`.`tipos_transacciones` `tt` on(`tf`.`tipo_transaccion_id` = `tt`.`id`)) where `tt`.`categoria` = 'INGRESO' and `tf`.`activo` = 1 group by `tf`.`vehiculo_id`) `ingresos` on(`v`.`id` = `ingresos`.`vehiculo_id`)) left join (select `tf`.`vehiculo_id` AS `vehiculo_id`,sum(`tf`.`monto`) AS `total_egresos` from (`sistema_vehicular`.`transacciones_financieras` `tf` join `sistema_vehicular`.`tipos_transacciones` `tt` on(`tf`.`tipo_transaccion_id` = `tt`.`id`)) where `tt`.`categoria` = 'EGRESO' and `tf`.`activo` = 1 group by `tf`.`vehiculo_id`) `egresos` on(`v`.`id` = `egresos`.`vehiculo_id`))"));
    }

    /**
     * Create an aliased <code>sistema_vehicular.vista_vehiculos_completa</code>
     * table reference
     */
    public VistaVehiculosCompleta(String alias) {
        this(DSL.name(alias), VISTA_VEHICULOS_COMPLETA);
    }

    /**
     * Create an aliased <code>sistema_vehicular.vista_vehiculos_completa</code>
     * table reference
     */
    public VistaVehiculosCompleta(Name alias) {
        this(alias, VISTA_VEHICULOS_COMPLETA);
    }

    /**
     * Create a <code>sistema_vehicular.vista_vehiculos_completa</code> table
     * reference
     */
    public VistaVehiculosCompleta() {
        this(DSL.name("vista_vehiculos_completa"), null);
    }

    public <O extends Record> VistaVehiculosCompleta(Table<O> child, ForeignKey<O, VistaVehiculosCompletaRecord> key) {
        super(child, key, VISTA_VEHICULOS_COMPLETA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : SistemaVehicular.SISTEMA_VEHICULAR;
    }

    @Override
    public VistaVehiculosCompleta as(String alias) {
        return new VistaVehiculosCompleta(DSL.name(alias), this);
    }

    @Override
    public VistaVehiculosCompleta as(Name alias) {
        return new VistaVehiculosCompleta(alias, this);
    }

    @Override
    public VistaVehiculosCompleta as(Table<?> alias) {
        return new VistaVehiculosCompleta(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaVehiculosCompleta rename(String name) {
        return new VistaVehiculosCompleta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaVehiculosCompleta rename(Name name) {
        return new VistaVehiculosCompleta(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public VistaVehiculosCompleta rename(Table<?> name) {
        return new VistaVehiculosCompleta(name.getQualifiedName(), null);
    }
}
