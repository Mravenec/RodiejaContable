/*
 * This file is generated by jOOQ.
 */
package com.rodiejacontable.database.jooq.tables.pojos;


import com.rodiejacontable.database.jooq.enums.TiposTransaccionesCategoria;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TiposTransacciones implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String nombre;
    private String descripcion;
    private TiposTransaccionesCategoria categoria;
    private Byte activo;

    public TiposTransacciones() {}

    public TiposTransacciones(TiposTransacciones value) {
        this.id = value.id;
        this.nombre = value.nombre;
        this.descripcion = value.descripcion;
        this.categoria = value.categoria;
        this.activo = value.activo;
    }

    public TiposTransacciones(
        Integer id,
        String nombre,
        String descripcion,
        TiposTransaccionesCategoria categoria,
        Byte activo
    ) {
        this.id = id;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.categoria = categoria;
        this.activo = activo;
    }

    /**
     * Getter for <code>sistema_vehicular.tipos_transacciones.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>sistema_vehicular.tipos_transacciones.id</code>.
     */
    public TiposTransacciones setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>sistema_vehicular.tipos_transacciones.nombre</code>.
     */
    public String getNombre() {
        return this.nombre;
    }

    /**
     * Setter for <code>sistema_vehicular.tipos_transacciones.nombre</code>.
     */
    public TiposTransacciones setNombre(String nombre) {
        this.nombre = nombre;
        return this;
    }

    /**
     * Getter for
     * <code>sistema_vehicular.tipos_transacciones.descripcion</code>.
     */
    public String getDescripcion() {
        return this.descripcion;
    }

    /**
     * Setter for
     * <code>sistema_vehicular.tipos_transacciones.descripcion</code>.
     */
    public TiposTransacciones setDescripcion(String descripcion) {
        this.descripcion = descripcion;
        return this;
    }

    /**
     * Getter for <code>sistema_vehicular.tipos_transacciones.categoria</code>.
     */
    public TiposTransaccionesCategoria getCategoria() {
        return this.categoria;
    }

    /**
     * Setter for <code>sistema_vehicular.tipos_transacciones.categoria</code>.
     */
    public TiposTransacciones setCategoria(TiposTransaccionesCategoria categoria) {
        this.categoria = categoria;
        return this;
    }

    /**
     * Getter for <code>sistema_vehicular.tipos_transacciones.activo</code>.
     */
    public Byte getActivo() {
        return this.activo;
    }

    /**
     * Setter for <code>sistema_vehicular.tipos_transacciones.activo</code>.
     */
    public TiposTransacciones setActivo(Byte activo) {
        this.activo = activo;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TiposTransacciones other = (TiposTransacciones) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.nombre == null) {
            if (other.nombre != null)
                return false;
        }
        else if (!this.nombre.equals(other.nombre))
            return false;
        if (this.descripcion == null) {
            if (other.descripcion != null)
                return false;
        }
        else if (!this.descripcion.equals(other.descripcion))
            return false;
        if (this.categoria == null) {
            if (other.categoria != null)
                return false;
        }
        else if (!this.categoria.equals(other.categoria))
            return false;
        if (this.activo == null) {
            if (other.activo != null)
                return false;
        }
        else if (!this.activo.equals(other.activo))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.nombre == null) ? 0 : this.nombre.hashCode());
        result = prime * result + ((this.descripcion == null) ? 0 : this.descripcion.hashCode());
        result = prime * result + ((this.categoria == null) ? 0 : this.categoria.hashCode());
        result = prime * result + ((this.activo == null) ? 0 : this.activo.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TiposTransacciones (");

        sb.append(id);
        sb.append(", ").append(nombre);
        sb.append(", ").append(descripcion);
        sb.append(", ").append(categoria);
        sb.append(", ").append(activo);

        sb.append(")");
        return sb.toString();
    }
}
