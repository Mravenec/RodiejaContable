USE sistema_vehicular;

-- ========================================
-- 1. POBLAR MARCAS 
-- ========================================
INSERT INTO marcas (nombre) VALUES
('Toyota'),   -- id = 1
('Honda');    -- id = 2
SELECT * FROM marcas;

-- ========================================
-- 2. POBLAR MODELOS 
-- ========================================
INSERT INTO modelos (marca_id, nombre) VALUES
(1, 'Corolla'),  -- id = 1  (Toyota)
(2, 'Civic');    -- id = 2  (Honda)
SELECT * FROM modelos;

-- ========================================
-- 3. POBLAR GENERACIONES 
-- ========================================
INSERT INTO generaciones (modelo_id, nombre, descripcion, anio_inicio, anio_fin) VALUES
(1, 'gen12', 'Duod√©cima generaci√≥n E210', 2020, 2024),       -- id = 1  (Corolla)
(2, 'gen10', 'D√©cima generaci√≥n FC/FK',    2016, 2021);      -- id = 2  (Civic)
SELECT * FROM generaciones;

-- ========================================
-- 4. POBLAR EMPLEADOS 
-- ========================================
INSERT INTO empleados (nombre) VALUES
('ACXEL'),
('ADRIANA'),
('AMAURIS'),
('CACHORRO'),
('DIEGO'),
('JHONATHAN'),
('LUIS MIRANDA'),
('NALLELY'),
('VICTORIA');
SELECT * FROM empleados;

-- ========================================
-- 5. POBLAR TIPOS DE TRANSACCIONES 
-- ========================================
INSERT INTO tipos_transacciones (nombre, descripcion, categoria) VALUES
('Venta Veh√≠culo', 'Ingreso por venta de veh√≠culo completo', 'INGRESO'),
('Venta Repuesto', 'Ingreso por venta de repuesto individual', 'INGRESO'),
('Venta Mayoreo', 'Ingreso por venta al mayoreo', 'INGRESO'),
('Servicios Mec√°nicos', 'Ingreso por servicios de mec√°nica', 'INGRESO'),
('Alquiler Espacio', 'Ingreso por alquiler de espacio en yonke', 'INGRESO'),
('Compra Veh√≠culo', 'Egreso por compra de veh√≠culo', 'EGRESO'),
('Compra Repuesto', 'Egreso por compra de repuesto', 'EGRESO'),
('Reparaci√≥n Veh√≠culo', 'Egreso por reparaciones de veh√≠culo', 'EGRESO'),
('Mantenimiento Local', 'Egreso por mantenimiento del local', 'EGRESO'),
('Comisi√≥n Vendedor', 'Egreso por comisi√≥n a vendedor', 'EGRESO'),
('Costo Gr√∫a', 'Egreso por servicio de gr√∫a', 'EGRESO'),
('Transporte', 'Egreso por transporte de veh√≠culos', 'EGRESO'),
('Combustible', 'Egreso por combustible', 'EGRESO'),
('Servicios P√∫blicos', 'Egreso por electricidad, agua, tel√©fono', 'EGRESO'),
('Impuestos', 'Egreso por impuestos y patentes', 'EGRESO'),
('Salarios', 'Egreso por planillas y cargas sociales', 'EGRESO'),
('Otros Ingresos', 'Otros ingresos diversos', 'INGRESO'),
('Otros Egresos', 'Otros egresos diversos', 'EGRESO');

SELECT * FROM tipos_transacciones;


-- ========================================
-- 6. POBLAR VEH√çCULOS 
-- ========================================
/* Veh√≠culo 1 ‚Äì Toyota Corolla gen12 */
INSERT INTO vehiculos (
    generacion_id, anio, precio_compra, costo_grua, comisiones,
    fecha_ingreso, estado
) VALUES (
    1, 2023, 10000000.00, 50000.00, 100000.00,
    CURRENT_DATE(), 'DISPONIBLE'
);

/* Veh√≠culo 2 ‚Äì Honda Civic gen10 (para repuestos) */
INSERT INTO vehiculos (
    generacion_id, anio, precio_compra, costo_grua, comisiones,
    fecha_ingreso, estado
) VALUES (
    2, 2018, 6000000.00, 40000.00, 80000.00,
    CURRENT_DATE(), 'DESARMADO'
);
SELECT * FROM vehiculos;
SELECT * FROM generaciones;
SELECT * FROM transacciones_financieras;

-- ========================================
-- 7. POBLAR INVENTARIO DE REPUESTOS (1 dato)
-- ========================================
INSERT INTO inventario_repuestos (
    vehiculo_origen_id, parte_vehiculo, descripcion,
    precio_costo, precio_venta, precio_mayoreo,
    bodega, zona, pared, malla, estante, piso,
    estado, condicion, fecha_creacion, imagen_url
) VALUES (
    2,                               -- vehiculo_origen_id (Honda Civic 2018)
    'MOTOR',                         -- parte_vehiculo
    'Motor 1.5 L Turbo VTEC',        -- descripcion
    1200000.00,                      -- precio_costo
    1800000.00,                      -- precio_venta
    1500000.00,                      -- precio_mayoreo (ejemplo ¬± 25 %)
    'C-',                            -- bodega
    'Z1-',                           -- zona
    'PE-',                           -- pared
    'V5',                            -- malla
    'E1',                            -- estante
    'P2-',                           -- piso
    'STOCK',                         -- estado
    '50%-',                          -- condicion (usado en buen estado)
    CURRENT_DATE(),                  -- fecha_creacion (triggers calculan a√±o/mes)
    'https://tu-cdn.com/repuestos/motor_civic_15t.jpg'  -- ‚úÖ imagen_url
);

SELECT * FROM inventario_repuestos; -- Ver c√≥digos generados autom√°ticos

-- ========================================
-- 8. POBLAR TRANSACCIONES FINANCIERAS (2 datos)
-- ========================================

-- A) Venta del repuesto (motor Civic 1.5L Turbo).
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id, empleado_id,
    repuesto_id, monto, comision_empleado,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(),       -- Fecha de la venta
    2,                    -- tipo_transaccion_id = 2 (Venta Repuesto)
    1,                    -- empleado_id = 1 (ACXEL)
    1,                    -- repuesto_id = 1
    1800000.00,           -- monto de venta
    25000.00,             -- comisi√≥n al vendedor
    'Venta Motor Civic 1.5L Turbo', 
    'VENTA-REP-001'
);


-- B) Venta del Toyota Corolla 2023 (vehiculo_id = 1)

INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id, empleado_id,
    vehiculo_id, monto, comision_empleado,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(),        -- Fecha de venta
    1,                     -- tipo_transaccion_id = 1 (Venta Veh√≠culo)
    2,                     -- empleado_id = 2 (ADRIANA)
    1,                     -- vehiculo_id = 1 (Corolla)
    12000000.00,           -- monto
    60000.00,              -- comisi√≥n al vendedor
    'Venta Toyota Corolla 2023',
    'VENTA-COROLLA-001'
);

SELECT * FROM transacciones_financieras;  -- Ver c√≥digos generados y campos calculados

-- ========================================
-- 9. EJEMPLOS DE REGISTROS EN HISTORIAL DE AUDITOR√çA (2 datos)
-- ========================================

-- Visualizar todos los cambios auditados (veh√≠culos, repuestos y transacciones)
SELECT * FROM vista_auditoria_completa;

-- üîç Filtrar por tipo de entidad si deseas:

-- Cambios en veh√≠culos (estado, precio_venta, etc.)
SELECT * FROM vista_auditoria_completa WHERE tipo_entidad = 'Veh√≠culo';

-- Cambios en repuestos (estado, precio_venta)
SELECT * FROM vista_auditoria_completa WHERE tipo_entidad = 'Repuesto';

-- Cambios en transacciones (monto, comisiones, etc.)
SELECT * FROM vista_auditoria_completa WHERE tipo_entidad = 'Transacci√≥n';

-- üìò Historial completo de un veh√≠culo espec√≠fico (por ID)
CALL sp_historial_vehiculo(1);

-- üóìÔ∏è Actividad de auditor√≠a entre fechas espec√≠ficas
CALL sp_actividad_auditoria_fecha(CURRENT_DATE(), CURRENT_DATE());

-- ========================================
-- Ejemplo de reparacion de automovil
-- ========================================



-- ========================================
-- 1. Agregar Modelo y Generaci√≥n Hilux
-- ========================================

-- Modelo Hilux para Toyota (marca_id = 1)
INSERT INTO modelos (marca_id, nombre) VALUES
(1, 'Hilux');           -- id = 3

-- Generaci√≥n gen8 de Hilux (sup√≥n 2016-2023)
INSERT INTO generaciones (modelo_id, nombre, descripcion, anio_inicio, anio_fin)
VALUES (3, 'gen8', 'Octava generaci√≥n Hilux', 2016, 2023);  -- id = 3


SELECT * FROM marcas;
SELECT * FROM modelos;
SELECT * FROM generaciones;

-- ========================================
-- 2. Ingresar el Veh√≠culo Da√±ado
-- ========================================
-- Ingresar Hilux 2020 en estado REPARACION
INSERT INTO vehiculos (
    generacion_id, anio, precio_compra, costo_grua, comisiones,
    fecha_ingreso, estado, notas
) VALUES (
    3, 2020, 8000000.00, 45000.00, 90000.00,   -- Ejemplo de costos
    CURRENT_DATE(), 'REPARACION',
    'Veh√≠culo ingresado con da√±o en motor y carrocer√≠a, apto para reparaci√≥n'
);

SELECT * FROM vehiculos;


-- (El trigger genera c√≥digo y registra compra autom√°ticamente)

-- ========================================
-- 3. Registrar Gastos de Reparaci√≥n
-- ========================================

-- Supongamos 2 egresos: repuesto motor y repintado.

-- Egreso: compra motor usado (egreso, sin repuesto ligado)
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id, vehiculo_id, generacion_id, monto,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(), 
    7,    -- tipo_transaccion_id = 7: 'Compra Repuesto'
    3,    -- vehiculo_id = 3 (el Hilux)
    3,    -- generacion_id = 3
    600000.00, 
    'Compra motor usado para Hilux reparaci√≥n', 
    'REP-HILUX-MOTOR-001'
);

-- Egreso: pintura completa (servicio externo)
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id, vehiculo_id, generacion_id, monto,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(),
    8,    -- tipo_transaccion_id = 8: 'Reparaci√≥n Veh√≠culo'
    3,    -- vehiculo_id = 3
    3,    -- generacion_id = 3
    250000.00, 
    'Pintura completa Hilux 2020', 
    'SERV-PINTURA-001'
);


SELECT * FROM generaciones;
SELECT * FROM vehiculos;
SELECT * FROM transacciones_financieras; 
-- ========================================
-- 3. Cambiar el Estado del Veh√≠culo a DISPONIBLE (opcional, para marcarlo listo para venta)
-- ========================================
SELECT * FROM vehiculos;
SELECT * FROM generaciones;

UPDATE vehiculos
SET estado = 'DISPONIBLE',
    notas = CONCAT(
        COALESCE(notas, ''), 
        CONCAT('\n[', CURRENT_DATE(), '] Reparaci√≥n finalizada: motor y pintura. Veh√≠culo listo para venta.')
    )
WHERE id = 3;

-- ========================================
-- 4. Registrar la Venta del Hilux Reparado
-- ========================================
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id, empleado_id,
    vehiculo_id, monto, comision_empleado,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(),       -- Fecha de venta
    1,                    -- tipo_transaccion_id = 1 (Venta Veh√≠culo)
    5,                    -- empleado_id = 5 (DIEGO)
    3,                    -- vehiculo_id = 3 (Hilux)
    10900000.00,          -- monto de venta
    50000.00,             -- comisi√≥n al vendedor
    'Venta Hilux 2020 Reparado',
    'VENTA-HILUX-2020-001'
);
SELECT * FROM generaciones;
SELECT * FROM vehiculos;
SELECT * FROM transacciones_financieras; 

-- ========================================
--  PROCESO: COMPRA ‚Üí VENTA DE REPUESTOS SIN VEH√çCULO ORIGEN
-- ========================================
USE sistema_vehicular;

-- =========================================================
-- A) "Bomba de Agua" (Corolla gen12) ‚Äì SIN comisi√≥n
-- =========================================================
SELECT * FROM generaciones;
SELECT * FROM vehiculos;
SELECT * FROM inventario_repuestos;
SELECT * FROM transacciones_financieras; 

-- A-1. Compra autom√°tica + alta en inventario
CALL sp_insertar_repuesto_con_generacion_sin_vehiculo(
    1, 'Toyota',                        -- p_generacion_id, p_marca_nombre
    'BOMBA DE AGUA',                    -- p_parte_vehiculo
    'Bomba de agua OEM Toyota Corolla', -- p_descripcion
    70000.00, 110000.00, 95000.00,      -- p_precio_costo, p_precio_venta, p_precio_mayoreo
    'R-', 'Z2-', 'PN-', 'V10', 'E2', 'P3-', -- p_bodega, p_zona, p_pared, p_malla, p_estante, p_piso
    'STOCK', '100%-',                   -- p_estado, p_condicion
    'https://tu-cdn.com/repuestos/bomba_corolla.jpg' -- p_imagen_url  ‚úÖ
);
-- Crea:
--   ‚Ä¢ inventario_repuestos (ej. id = 2)
--   ‚Ä¢ transacciones_financieras (tipo = Compra Repuesto)

-- A-2. Venta sin comisi√≥n ‚Äì tipo 2 (Venta Repuesto)
-- ‚ö†Ô∏è Incluye generaci√≥n_id expl√≠cita para asegurar actualizaci√≥n correcta
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id,
    empleado_id, repuesto_id, generacion_id,
    monto, comision_empleado,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(), 2,     -- Venta Repuesto
    3, 2, 1,               -- AMAURIS vende repuesto id = 2, generaci√≥n = Corolla
    110000.00, 0.00,
    'Venta Bomba de Agua Corolla gen12',
    'VENTA-REP-BA-COR-001'
);

-- =========================================================
-- B) "Kit Embrague" (Civic gen10) ‚Äì CON comisi√≥n
-- =========================================================
SELECT * FROM vista_ventas_por_empleado;
SELECT * FROM generaciones;
SELECT * FROM vehiculos;
SELECT * FROM inventario_repuestos;
SELECT * FROM transacciones_financieras; 


-- B-1. Compra autom√°tica + alta (sin veh√≠culo origen, con c√≥digo √∫nico por generaci√≥n)
CALL sp_insertar_repuesto_con_generacion_sin_vehiculo(
    2,                -- generaci√≥n_id = 2 (Civic gen10)
    'Honda',          -- marca asociada a la generaci√≥n
    'EMBRAGUE',       -- parte del veh√≠culo
    'Kit embrague original Honda Civic',  -- descripci√≥n
    85000.00,         -- precio_costo
    140000.00,        -- precio_venta
    120000.00,        -- precio_mayoreo
    'R-',             -- bodega
    'Z3-',            -- zona
    'PS-',            -- pared
    'V12',            -- malla
    'E3',             -- estante
    'P3-',            -- piso
    'STOCK',          -- estado inicial del repuesto
    '100%-',          -- condici√≥n del repuesto
    'https://tu-cdn.com/repuestos/embrague_civic.jpg' -- p_imagen_url  ‚úÖ
);

-- Crea repuesto id = 3

-- B-2. Venta del repuesto con comisi√≥n al vendedor
INSERT INTO transacciones_financieras (
    fecha, tipo_transaccion_id,
    empleado_id, repuesto_id, generacion_id,
    monto, comision_empleado,
    descripcion, referencia
) VALUES (
    CURRENT_DATE(),   -- Fecha de la venta
    2,                -- tipo_transaccion_id = 2 (Venta Repuesto)
    4,                -- empleado_id = 4 (CACHORRO)
    3,                -- repuesto_id = 3 (Kit embrague Civic)
    2,                -- generacion_id = 2 (Civic gen10)
    140000.00,        -- monto de venta
    10000.00,         -- comisi√≥n al vendedor
    'Venta Embrague Civic gen10',  -- descripci√≥n de la transacci√≥n
    'VENTA-REP-EMB-CIV-001'        -- c√≥digo de referencia personalizado
);

SELECT * FROM vista_ventas_por_empleado;
SELECT * FROM vista_ventas_empleado_mensual WHERE anio = YEAR(NOW()) AND mes = MONTH(NOW());

-- =========================================================
-- C) CONSULTAS DE VERIFICACI√ìN
-- =========================================================

-- Repuestos vendidos: deben tener estado = 'VENDIDO'
SELECT id, codigo_repuesto, estado
FROM inventario_repuestos
WHERE id IN (2, 3);

-- √öltimas transacciones (venta y compra)
SELECT id, codigo_transaccion, fecha, tipo_transaccion_id,
       repuesto_id, empleado_id, monto, comision_empleado
FROM transacciones_financieras
ORDER BY id DESC
LIMIT 10;

-- Ver ingresos reflejados por generaci√≥n (gen12 y gen10)
SELECT *
FROM vista_resumen_generaciones
WHERE generacion_id IN (1, 2);



-- ========================================
-- 8B. TRANSACCIONES DE GASTOS FIJOS GLOBALES (NO VINCULADOS A VEH√çCULOS)
-- ========================================

-- Gasto: Patente
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Impuestos' LIMIT 1),
    20000.00,
    'Pago de patente municipal',
    'EGRESO-PATENTE-JUL25'
);

-- Gasto: Impuesto municipal
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Impuestos' LIMIT 1),
    15000.00,
    'Pago de impuesto municipal julio',
    'EGRESO-IMP-MUN-JUL25'
);

-- Gasto: Servicios p√∫blicos
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Servicios P√∫blicos' LIMIT 1),
    105000.00,
    'Pago de electricidad, agua y tel√©fono',
    'EGRESO-SERVPUB-JUL25'
);

-- Gasto: CCSS
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Salarios' LIMIT 1),
    227000.00,
    'Aporte patronal CCSS',
    'EGRESO-CCSS-JUL25'
);

-- Gasto: Salarios
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Salarios' LIMIT 1),
    2120000.00,
    'Pago de salarios',
    'EGRESO-SALARIOS-JUL25'
);

-- Gasto: Pr√©stamo bancario
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Otros Egresos' LIMIT 1),
    1000000.00,
    'Pago de pr√©stamo bancario',
    'EGRESO-PRESTAMO-JUL25'
);

-- Gasto: Contadora externa
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Otros Egresos' LIMIT 1),
    56500.00,
    'Honorarios contadora externa',
    'EGRESO-CONTADORA-JUL25'
);

-- Gasto: Seguro de riesgos del trabajo
INSERT INTO transacciones_financieras (fecha, tipo_transaccion_id, monto, descripcion, referencia)
VALUES (
    CURRENT_DATE(),
    (SELECT id FROM tipos_transacciones WHERE nombre = 'Otros Egresos' LIMIT 1),
    35000.00,
    'Pago seguro riesgos del trabajo',
    'EGRESO-CERO-RIESGOS-JUL25'
);

-- VISTAS

-- Todo el mes:
SELECT *
FROM vista_transacciones_completas
WHERE YEAR(fecha) = YEAR(NOW())
  AND MONTH(fecha) = MONTH(NOW())
ORDER BY fecha DESC;

-- Solo egresos
SELECT * FROM vista_transacciones_completas
WHERE categoria = 'EGRESO'
  AND YEAR(fecha) = YEAR(NOW())
  AND MONTH(fecha) = MONTH(NOW());

-- Solo ingresos
SELECT * FROM vista_transacciones_completas
WHERE categoria = 'INGRESO'
  AND YEAR(fecha) = YEAR(NOW())
  AND MONTH(fecha) = MONTH(NOW());
  
  
-- Analisis financiero del mes:
SELECT 
    anio, mes, nombre_mes,
    total_ingresos_netos AS total_ingresos,
    total_egresos,
    balance_neto,
    total_comisiones
FROM vista_analisis_financiero_mensual
WHERE anio = YEAR(NOW()) AND mes = MONTH(NOW());



SELECT 
    anio,                          -- A√±o del movimiento
    mes,                           -- Mes num√©rico (1‚Äì12)
    nombre_mes,                    -- Nombre del mes (Enero, Febrero, ...)
    
    total_transacciones,          -- N√∫mero total de transacciones del mes
    
    -- üí∞ Ingresos brutos y netos
    total_ingresos_brutos,           -- Ingresos antes de comisiones
    total_comisiones,                -- Comisiones pagadas (egreso)
    total_ingresos_netos,            -- Ingresos despu√©s de comisiones
    
    -- üí∏ Egresos
    total_egresos,                   -- Egresos registrados
    
    -- üìä Balance real
    balance_neto,                    -- Utilidad real (ingresos netos - egresos)
    
    -- üìà M√©tricas
    vehiculos_vendidos,          -- COUNT(distinct tf.vehiculo_id) en transacciones de ingreso
    repuestos_vendidos,          -- COUNT(distinct tf.repuesto_id) en transacciones de ingreso
    promedio_venta,              -- AVG(monto) de transacciones con categor√≠a = 'INGRESO'
    ratio_ingresos_egresos,      -- total_ingresos / total_egresos (proporci√≥n financiera)
    porcentaje_comisiones,       -- % de comisiones sobre ventas
    margen_utilidad_porcentaje   -- % de utilidad real
    
FROM vista_analisis_financiero_mensual
WHERE anio = YEAR(NOW()) AND mes = MONTH(NOW());